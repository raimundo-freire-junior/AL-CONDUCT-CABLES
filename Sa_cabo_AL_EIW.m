function [ta, K, Kmax, EI] = Sa_cabo_AL_EIW(log_N, tmed, tult, pl, A, d, n)
% This Function Calculate Sa from an aluminum cable used EIW Model
%
% Na entrada, log_N é o número de ciclos em escala log10 desejado, tmed é 
% a tensão média aplicada ao cabo (MPa), tult é a tensão ultima suportada 
% pelo cabo (MPa), pl é o seu peso linear (kg/m), E é o modulo de 
% elasticidade (GPa), A é a área total do cabo (mm^2), d é o diamentro do fio
% (mm), e n é o número de fios do cabo e as saídas são ta o valor da amplitude
% de tensão (MPa), K, Kmax e EI com o valor de rigidez a flexão (N*m^2)

% Valores fixos
maxciclos=8;     % Valor maximo de numero de ciclos 'lembrar que ciclos=log10(N)'
x= 89;           % ultimo ponto de contato (mm)
pl_max=1500;     % peso linear maximo (kg/km)
EI_max=31000000; % Rigidez a flexao máximo (MPa.*mm4)
E=69000;            % Modulo de Elasticidade do Al (GPa)

% Calculo de EI e pl
EI=(n.*E.*pi.*d.^4)/64;
pl=pl.*1000;

% Calculo de K
p=((tmed.*A)/EI).^(1/2);
px=p.*x;
e_px=exp(-p.*x);         
K=(E.*d.*(p.^2))./(4.*(e_px-1+px));

% Calculo de Kmax
p_max=((tult.*A)/EI).^(1/2);
px_max=p_max.*x;
e_px_max=exp(-p_max.*x);         
Kmax=(E.*d.*(p_max.^2))./(4.*(e_px_max-1+px_max));

% Normalizando os valores
K_nor=K./Kmax;
pl_nor=pl./pl_max;
log_N_nor=log_N./maxciclos;
tmed_nor=tmed./tult;
EI_nor=EI./EI_max;

% Verificacao de erros
if K>Kmax
    warndlg('O valor de tmed deve ser inferior a tult','Erro em tmed');
    return;
end
if pl>pl_max
    warndlg('O valor de pl deve ser inferior a 1500 Kg/m','Erro em pl');
end
if log_N>maxciclos
    warndlg('O valor de log(N) deve ser inferior a 8','Erro no log(N)');
end


% ANN Mixed Weights
W=[1.0141 -0.34733 -0.40640 -0.81648 -0.71630;0.99130 -0.46990 -0.35965 -0.77029 -0.78515;1.1464 -0.65916 -0.34264 -0.47536 -0.69254;0.14665 -2.1937 1.3397 -0.59671 0.48819;0.86582 -0.71961 -0.48127 -0.76968 -0.92964;0.99091 -0.46258 -0.48298 -0.68007 -0.90665;0.79912 -0.82890 -0.59515 -0.85474 -0.86986;0.84290 -0.92905 -0.58005 -0.81834 -0.71356;0.93358 -0.75298 -0.33955 -0.76886 -0.82282;1.0077 -0.63745 -0.093032 -0.71641 -0.68805;0.12257 -1.3214 -0.82282 -1.1813 -0.57825;1.1348 -0.59119 -0.38761 -0.61998 -0.65535;0.77076 -0.99900 -0.64868 -0.87524 -0.66657;1.0118 -0.16474 -0.088912 -0.94234 -0.27703;0.88661 -0.64729 -0.51700 -0.72182 -0.94589;0.75257 -0.89757 -0.51692 -0.89461 -0.88847;0.90120 -0.56328 -0.49518 -0.69357 -1.0153;0.97841 -0.77254 -0.39473 -0.61073 -0.84680;0.89903 -0.79720 -0.57854 -0.80817 -0.77865;3.9030 6.7724 -2.5267 2.7168 -2.1645;0.82898 -0.94591 -0.47364 -0.85437 -0.81388;0.94176 -0.61416 -0.47085 -0.77187 -0.83833;0.95350 -0.43901 0.29132 -0.91029 -0.32472;0.71512 -0.84404 -0.59450 -0.99534 -0.85054;0.91239 -0.78710 -0.32928 -0.83151 -0.81423;1.0298 -0.52001 -0.55141 -0.78209 -0.57310;0.66301 -0.99820 -0.59858 -0.93313 -0.80809;0.86781 -0.85611 -0.55635 -0.69270 -0.84984;0.19489 -0.58487 -1.6645 0.29250 0.96838;0.70998 -0.88575 -0.56099 -0.90977 -0.90863;0.67841 -0.96777 -0.54172 -0.99735 -0.83649;1.0107 -0.65520 -0.59267 -0.56307 -0.77380;0.93836 -0.67253 -0.56123 -0.80071 -0.82157;0.90814 -0.70079 -0.51123 -0.73996 -0.90007;1.1247 -0.17569 -0.79602 -0.57071 -0.62886;1.1276 -0.36989 -0.32358 -0.71311 -0.42236;-1.9361 -2.7880 -1.3537 -1.2204 0.20629;1.0853 -0.66059 -0.54293 -0.71894 -0.53066;1.1059 -1.1727 0.16729 -0.56003 -0.72799;1.0034 -0.69607 -0.61504 -0.78533 -0.60487;0.87432 -0.74807 -0.59491 -0.86644 -0.74138;1.0496 -0.83453 -0.38322 -0.58722 -0.73452;1.0842 -0.51323 -0.49044 -0.60493 -0.75554;0.95930 -0.66083 -0.52673 -0.80437 -0.72811;0.86798 -0.67942 -0.58014 -0.76049 -0.86366;2.2633 -3.2097 -1.3929 1.1693 2.6029;0.93665 -0.92088 -0.54308 -0.77750 -0.64854;1.0006 -0.63076 -0.52075 -0.73391 -0.76639;0.75575 -0.93361 -0.51376 -0.99257 -0.78897;1.0155 -0.53837 0.33882 -0.83318 -0.24866;1.0243 -0.57402 -0.40865 -0.64040 -0.82504;1.1109 -0.38463 -0.46499 -0.66769 -0.59856;1.0663 -0.42044 -0.89504 -0.40460 -0.34726;0.54910 -1.1009 -0.58448 -1.0740 -0.75556;0.93682 -0.55385 -0.51189 -0.71140 -0.90213;1.0233 -0.49071 -0.54036 -0.65690 -0.74639;0.91032 -0.68704 -0.54745 -0.75853 -0.82286];
V=[-1.3110;-0.22659;-0.16079;-0.21062;-2.0694;0.075532;-0.076502;0.18854;0.12420;-0.018118;-0.26718;0.66237;-0.17913;0.19606;-0.63958;0.040907;0.21831;0.029015;-0.037126;0.096352;-0.54050;0.17096;-0.021256;-0.71081;0.25061;0.011948;-0.17528;0.28846;0.075071;-1.0960;0.24627;0.29990;-0.10478;0.050073;0.055877;-0.38072;-0.40222;1.6398;-0.14056;-0.27131;-0.048924;0.071033;-0.076741;-0.15041;-0.021280;0.036262;0.58327;0.061023;-0.038899;0.24219;-0.73612;-0.10446;-0.28191;-0.48334;0.41245;-0.030228;-0.15497;0.017957];

% Dados para serem utilizados na rede
xteste=[log_N_nor tmed_nor EI_nor pl_nor];

%%%%%%% ANN %%%%%%%
% Camada de entrada
x=[-1 xteste]';
nety=W*x;

% CAMADA OCULTA
y=(1)./(1+exp(-nety'));
netz=[-1 y]*V;

% CAMADA DE SAIDA
ta_nor=netz';
ta=(ta_nor).*tult;

% Saida de EI
EI=EI./1000000;

%%% Correcao de erros %%%
if (ta_nor<0)
    K=Kmax;
    ta=0;
elseif ta>tult
   ta='NAN';
   warndlg('O valor de Sa nao e confiavel','Erro em Sa');
end


